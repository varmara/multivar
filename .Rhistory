30/75
30/55
library(scatterplot3d)
# Chunk 1: setup
#-- RUN THE FRAGMENT BETWEEN LINES BEFORE COMPILING MARKDOWN
# to configure markdown parsing
options(markdown.extensions = c("no_intra_emphasis", "tables", "fenced_code", "autolink", "strikethrough", "lax_spacing", "space_headers", "latex_math"))
#------
# output options
options(width = 70, scipen = 6, digits = 3)
# to render cyrillics in plots use cairo pdf
options(device = function(file, width = 7, height = 7, ...) {
cairo_pdf(tempfile(), width = width, height = height, ...)
})
library(knitr)
# chunk default options
opts_chunk$set(fig.align='center', tidy = FALSE, fig.width = 7, fig.height = 3, warning=FALSE)
# Chunk 2
dat <- data.frame(trait = c(rnorm(100, 10,1), rnorm(100, 15, 1)), object = rep(c("a","b"), each = 100))
library(ggplot2)
theme_set(theme_bw(base_size = 14))
ggplot(dat[1:100,], aes(x = trait)) + geom_histogram(binwidth = 0.5, color = "black", fill = "blue") + xlab("Character") + theme_bw() + geom_histogram(data = dat[101:200,], aes(x = trait), binwidth = 0.5, color = "black", fill = "red") + ggtitle("Character distribution ")
# Chunk 3
ax <- rnorm(100, 10, 1)
ay <- 7*ax + rnorm(100, 0, 5)
bx <- rnorm(100, 11, 1)
by <- -0.5*bx + 70 + rnorm(100, 0, 3)
dat <- data.frame(x = c(ax, bx), y = c(ay, by), object = rep(c("a","b"), each = 100))
pl1 <- ggplot(dat, aes(x = x, y = y)) + geom_point(aes(color = object), size = 3) + xlab("Character 1") + ylab("Character 2") + theme_bw() + guides(color = F) + scale_color_manual(values = c("blue", "red"))
pl2 <- ggplot(dat, aes(x = x)) + geom_histogram(binwidth = 0.5, color = "black", fill = "gray") + xlab("Character 1") + theme_bw()
pl3 <- ggplot(dat, aes(x = y)) + geom_histogram(binwidth = 3, color = "black", fill = "gray") + xlab("Character 2") + theme_bw()
library(gridExtra)
grid.arrange(pl1, pl2, pl3, ncol = 2)
# Chunk 4
library (scatterplot3d)
dat$z = c(rnorm(100, 11, 1), rnorm(100, 14, 1))
scatterplot3d(x = dat$x, y = dat$z, z = dat$y, xlab = "Descriptor 1", ylab = "Descriptor 2", zlab = "Descriptor 3", color = rep(c("red","blue"), each = 100), pch = 21)
# Chunk 5
dat2 <- data.frame(object = c("Object 1", "Object 2", "Object 3", "Object 4" ), x = c(2, 2, 4, 2.5), y = c(5, 10, 8, 4))
library(ggrepel)
pl4 <- ggplot(dat2, aes(x = x, y = y)) + geom_point(size = 5, color = "red") + xlim(0,5) + ylim(0, 11) + annotate(geom = "segment", x = 0, y = 0, xend = 2, yend = 5, arrow = arrow(type = "closed", angle = 20, ends = "last"), size = 1) + annotate(geom = "segment", x = 0, y = 0, xend = 2, yend = 10, arrow = arrow(type = "closed", angle = 20, ends = "last"), size = 1) + geom_text_repel(aes(label = object)) + annotate(geom = "text", x = 1, y = 2, label = "LV 1", angle = 0) + annotate(geom = "text", x = 1, y = 6, label = "LV 2", angle = 0) + annotate(geom = "text", x = 1, y = 3.3, parse = TRUE, label = "alpha", size = 10, angle = 0)
pl5 <- ggplot(dat2, aes(x = x, y = y)) + geom_point(size = 5, color = "red") + xlim(0,5) + ylim(0, 11) + geom_segment(aes(x = 0, y = 0, xend = x, yend = y), arrow = arrow(type = "closed", angle = 20, ends = "last"), size = 1) + geom_segment(aes(x = 0, y = 0, xend = 2, yend = 10), arrow = arrow(type = "closed", angle = 20, ends = "last"), size = 1) + geom_text_repel(aes(x = x, y = y+0.5), label = dat2$object)
grid.arrange(pl4, pl5, nrow = 2)
# Chunk 6
pl6 <- ggplot(dat2, aes(x = x, y = y)) + geom_point(size = 5, color = "red") + theme_bw() + xlim(0, 5) + ylim(0, 11) + geom_text(aes(x = x, y = y+0.5), label = dat2$object)
for ( i in 1:nrow(dat2)) for (j in i:nrow(dat2)) pl6 <- pl6 + geom_segment(x = dat2$x[i], y = dat2$y[i], xend = dat2$x[j], yend = dat2$y[j], arrow = NULL, size = 1)
pl6
# Chunk 7
round(dist(dat2[,-1], diag = TRUE, upper = TRUE), 1)
round(dist(dat2[,-1], diag = TRUE, upper = F), 1)
round(dist(dat2[,-1], diag = F, upper = F), 1)
# Chunk 8
round(dist(dat2[,-1], diag = F, upper = F), 1)
as.vector(round(dist(dat2[,-1], diag = F, upper = F), 1))
# Chunk 9
protein <- read.table("data/Protein.txt", header = TRUE, sep = "\t")
head(protein)
# Chunk 10
scatterplot3d(x = protein$Eggs, y = protein$Cereals, z = protein$Fish, scale.y = 3, pch = 21, xlab = "Eggs", ylab = "Cerials", zlab = "Fish")
# Chunk 11
total <- apply(protein[, -1], MARGIN = 1,FUN = sum)
protein_stand <- protein[, -1] / total
protein_stand$Country <- protein$Country
head(protein_stand)
# Chunk 12
library (vegan)
vegdist(protein[, -1], method = "euclidian")
# Chunk 13
dat5 <- (data.frame(Descriptors = c("D1", "D2", "D3", "D4", "D5", "D6", "D7", "D8", "D9", "D10"), Object1 = c(0, 0, 0, 0, 0, 0, 0, 2, 2, 1), Object2 = c(0, 0, 0, 0, 0, 4, 5, 0, 0, 1)))
dat6 <- data.frame(t(dat5[,-1]))
names(dat6) <- dat5$Descriptors
dat6
# Chunk 14
BCD <- as.vector(vegdist(protein[,-1], method = "bray"))
ED <- as.vector(vegdist(protein[,-1], method = "euclidean"))
distances <- data.frame(Bray = BCD, Euclid = ED)
ggplot(distances, aes(x = Euclid, y = Bray)) + geom_point() + theme_bw()
# Chunk 15
ggplot(distances, aes(x = Bray)) +
geom_histogram(binwidth = 0.03,
fill = "blue",
color = "black") +
theme_bw()
# Chunk 16
library(gplots)
op <- par(mar = c(3, 1, 0, 0))
heatmap.2 (as.matrix(vegdist(protein[,-1], method = "bray")), Rowv = F, dendrogram = "none", Colv = FALSE, density.info = "none", key = TRUE, trace = "none", col = colorpanel(3, low = "black", mid = "gray", high = "white"))
par(op)
# Chunk 17
heatmap.2 (as.matrix(vegdist(protein[,-1], method = "bray")), Rowv = T, distfun = vegdist, dendrogram = "none", density.info = "none", key = TRUE, trace = "none", col = colorpanel(3, low = "black", mid = "gray", high = "white"))
# Chunk 18
plejada <- function (data, method = "bray", Dcrit) {
# n - число точек
# p - период
library(ggplot2)
p <- n <- nrow(data)
factor <- points <- data.frame(X = c(1:n), Y = c(1:n))
k <- 0
for (i in 1:n){
factor$X[i] <- (i-1)/p - k
if ((i/p - trunc(i/p)) == 0) {
k <- k + 1
}
}
factor$Y <- factor$X
for (i in 1:n){
points$X[i] <- cos(2*pi*factor$X[i])
points$Y[i] <- sin(2*pi*factor$Y[i])
}
lab <- as.character(1:n)
pl <- ggplot(points, aes(x = X, y = Y)) + geom_text(label = lab, size = 6) + theme_void()
library(vegan)
dist <- as.matrix(vegdist(data, method = method))
for ( i in 1:n) {
for (j in i:n) {
if (dist[i, j] <= Dcrit) {
pl <- pl + geom_segment(x = points$X[i], y = points$Y[i], xend = points$X[j], yend = points$Y[j], color = "red")
}
}
}
pl
}
plejada (protein [, -1], Dcrit = 0.1)
# Chunk 19
plejada(data = protein [, -1], Dcrit = 0.15)
# Chunk 20
dat7 <- data.frame(X = c(0, 0, 0, 4, 5, 6, 7, 8, 9, 10), Y = c(1, 2, 3, 4, 0, 0, 0,8, 9, 10 ), Z = c(0, 0, 0, 0, 0, 0, 7, 8, 9, 10))
mds_eucl <- metaMDS(dat7, distance = "euclidean", autotransform = FALSE)
mds_bray <- metaMDS(dat7, distance = "bray", autotransform = FALSE)
mds_manch <- metaMDS(dat7, distance = "manhattan", autotransform = FALSE)
dat8 <- data.frame(X = c(0, 0, 0, 1, 1, 1, 1, 1, 1, 1), Y = c(1, 1, 1, 1, 0, 0, 0,1, 1, 1 ), Z = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1))
mds_jac <- metaMDS(dat8, distance = "jaccard", autotransform = FALSE)
# Chunk 21
pl_mds1 <- ggplot(data.frame(MDS1 = mds_eucl$points[,1], MDS2 = mds_eucl$points[,2]), aes(x = MDS1, y = MDS2)) + geom_point(size = 4) + theme_bw() + ggtitle("Euclidean")
pl_mds2 <- ggplot(data.frame(MDS1 = mds_manch$points[,1], MDS2 = mds_manch$points[,2]), aes(x = MDS1, y = MDS2)) + geom_point(size = 4) + theme_bw() + ggtitle("Manchattan")
pl_mds3 <- ggplot(data.frame(MDS1 = mds_bray$points[,1], MDS2 = mds_bray$points[,2]), aes(x = MDS1, y = MDS2)) + geom_point(size = 4) + theme_bw() + ggtitle("Bray-Curtis")
pl_mds4 <- ggplot(data.frame(MDS1 = mds_jac$points[,1], MDS2 = mds_jac$points[,2]), aes(x = MDS1, y = MDS2)) + geom_point(size = 4) + theme_bw() + ggtitle("Jaccard")
grid.arrange(pl_mds1, pl_mds2 , pl_mds3 , pl_mds4, ncol = 2)
# Chunk 22
row.names(protein) <- protein$Country
mds <- metaMDS(protein [,-1], distance = "euclidean", autotransform = FALSE)
# Chunk 23
plot(mds,type = "n", main = "Euclidean distance")
text(mds, display = "sites", cex = 1)
# Chunk 24
mds <- metaMDS(protein [,-1], distance = "bray", autotransform = FALSE)
# points(mds, display = "sites")
# Chunk 25
plot(mds,type = "n", main = "Bray-Curtis")
text(mds, display = "sites", cex = 1)
